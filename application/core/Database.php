<?phpnamespace application\core;use application\config\Config;use PDO;class Database{    protected $db;    public function __construct()    {        $username = Config::DB_USER;        $password = Config::DB_PASSWORD;        $dsn = 'mysql:host=' . Config::DB_HOST . ';dbname=' . Config::DB_NAME . ';charset=' . Config::DB_CHARSET;        $opt = [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC, PDO::ATTR_EMULATE_PREPARES => false];        $this->db = new PDO($dsn, $username, $password, $opt);    }    public function query($sql, $params = [])    {        $statement = $this->db->prepare($sql);        if (!empty($params))        {            foreach ($params as $key => $value)            {                if (is_int($value))                {                    $type = PDO::PARAM_INT;                } else                {                    $type = PDO::PARAM_STR;                }                $statement->bindValue(':' . $key, $value, $type);            }        }        $statement->execute();        return $statement;    }    public function row($sql, $params = [])    {        $query = $this->query($sql, $params);        return $query->fetchAll();    }    public function column($sql, $params = [])    {        $query = $this->query($sql, $params);        return $query->fetchColumn();    }    public function last_insert_id()    {        return $this->db->lastInsertId();    }}